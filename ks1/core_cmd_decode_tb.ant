-- F:\IAN\DES-SEARCH\DES-SEARCH
-- VHDL Annotation Test Bench created by
-- HDL Bencher 5.1i
-- Fri Aug 22 12:35:44 2003

LIBRARY  IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

LIBRARY ieee;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY testbench IS
END testbench;

ARCHITECTURE testbench_arch OF testbench IS
-- If you get a compiler error on the following line,
-- from the menu do Options->Configuration select VHDL 87
FILE RESULTS: TEXT OPEN WRITE_MODE IS "f:\ian\des-search\des-search\core_cmd_decode_tb.ano";
	COMPONENT core_cmd_decode
		PORT (
			cmd : in  std_logic_vector (1 DOWNTO 0);
			addr : in  std_logic_vector (3 DOWNTO 0);
			id : in  std_logic_vector (3 DOWNTO 0);
			clk : in  std_logic;
			status_read : out  std_logic;
			keygen_read : out  std_logic;
			keygen_write : out  std_logic;
			latch_read : out  std_logic
		);
	END COMPONENT;

	SIGNAL cmd : std_logic_vector (1 DOWNTO 0);
	SIGNAL addr : std_logic_vector (3 DOWNTO 0);
	SIGNAL id : std_logic_vector (3 DOWNTO 0);
	SIGNAL clk : std_logic;
	SIGNAL status_read : std_logic;
	SIGNAL keygen_read : std_logic;
	SIGNAL keygen_write : std_logic;
	SIGNAL latch_read : std_logic;

BEGIN
	UUT : core_cmd_decode
	PORT MAP (
		cmd => cmd,
		addr => addr,
		id => id,
		clk => clk,
		status_read => status_read,
		keygen_read => keygen_read,
		keygen_write => keygen_write,
		latch_read => latch_read
	);

	PROCESS -- Annotate outputs process
		VARIABLE TX_TIME : INTEGER :=0;

		PROCEDURE ANNOTATE_status_read(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",status_read,"));
			write(TX_LOC, status_read);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_keygen_read(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",keygen_read,"));
			write(TX_LOC, keygen_read);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_keygen_write(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",keygen_write,"));
			write(TX_LOC, keygen_write);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_latch_read(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",latch_read,"));
			write(TX_LOC, latch_read);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

	BEGIN
		CHECK_LOOP : LOOP
		WAIT FOR 50 ns;
		TX_TIME := TX_TIME + 50;
		ANNOTATE_status_read(TX_TIME);
		ANNOTATE_keygen_read(TX_TIME);
		ANNOTATE_keygen_write(TX_TIME);
		ANNOTATE_latch_read(TX_TIME);
		WAIT FOR 50 ns;
		TX_TIME := TX_TIME + 50;
		END LOOP CHECK_LOOP;
	END PROCESS;

	PROCESS
		VARIABLE TX_OUT : LINE;

		BEGIN
		-- --------------------
		cmd <= transport std_logic_vector'("00"); --0
		addr <= transport std_logic_vector'("0001"); --1
		id <= transport std_logic_vector'("0000"); --0
		-- --------------------
		WAIT FOR 100 ns; -- Time=100 ns
		cmd <= transport std_logic_vector'("01"); --1
		-- --------------------
		WAIT FOR 100 ns; -- Time=200 ns
		cmd <= transport std_logic_vector'("10"); --2
		-- --------------------
		WAIT FOR 100 ns; -- Time=300 ns
		cmd <= transport std_logic_vector'("11"); --3
		-- --------------------
		WAIT FOR 100 ns; -- Time=400 ns
		cmd <= transport std_logic_vector'("00"); --0
		-- --------------------
		WAIT FOR 100 ns; -- Time=500 ns
		cmd <= transport std_logic_vector'("01"); --1
		-- --------------------
		WAIT FOR 100 ns; -- Time=600 ns
		cmd <= transport std_logic_vector'("10"); --2
		-- --------------------
		WAIT FOR 100 ns; -- Time=700 ns
		cmd <= transport std_logic_vector'("11"); --3
		-- --------------------
		WAIT FOR 100 ns; -- Time=800 ns
		cmd <= transport std_logic_vector'("00"); --0
		addr <= transport std_logic_vector'("0000"); --0
		-- --------------------
		WAIT FOR 100 ns; -- Time=900 ns
		cmd <= transport std_logic_vector'("01"); --1
		-- --------------------
		WAIT FOR 100 ns; -- Time=1000 ns
		cmd <= transport std_logic_vector'("10"); --2
		-- --------------------
		WAIT FOR 100 ns; -- Time=1100 ns
		cmd <= transport std_logic_vector'("11"); --3
		-- --------------------
		WAIT FOR 100 ns; -- Time=1200 ns
		cmd <= transport std_logic_vector'("00"); --0
		-- --------------------
		WAIT FOR 100 ns; -- Time=1300 ns
		cmd <= transport std_logic_vector'("01"); --1
		-- --------------------
		WAIT FOR 100 ns; -- Time=1400 ns
		cmd <= transport std_logic_vector'("10"); --2
		-- --------------------
		WAIT FOR 100 ns; -- Time=1500 ns
		cmd <= transport std_logic_vector'("11"); --3
		-- --------------------
		WAIT FOR 150 ns; -- Time=1650 ns
		-- --------------------

		write(TX_OUT, string'("Total[]"));
		writeline(results, TX_OUT);
		ASSERT (FALSE) REPORT
			"Success! Simulation for annotation completed"
			SEVERITY FAILURE;
	END PROCESS;
END testbench_arch;

CONFIGURATION core_cmd_decode_cfg OF testbench IS
	FOR testbench_arch
	END FOR;
END core_cmd_decode_cfg;
