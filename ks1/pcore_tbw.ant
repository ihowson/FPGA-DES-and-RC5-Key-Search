-- C:\ISE\PIL-KEY-SEARCH
-- VHDL Annotation Test Bench created by
-- HDL Bencher 5.1i
-- Wed Aug 13 14:13:06 2003

LIBRARY  ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;

LIBRARY  UNISIM;
USE UNISIM.Vcomponents.ALL;

LIBRARY ieee;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY testbench IS
END testbench;

ARCHITECTURE testbench_arch OF testbench IS
-- If you get a compiler error on the following line,
-- from the menu do Options->Configuration select VHDL 87
FILE RESULTS: TEXT OPEN WRITE_MODE IS "c:\ise\pil-key-search\pcore_tbw.ano";
	COMPONENT pcore
		PORT (
			addr : IN  STD_LOGIC_VECTOR (13 DOWNTO 0);
			clk : IN  STD_LOGIC;
			clkdiv : IN  STD_LOGIC;
			din : IN  STD_LOGIC_VECTOR (63 DOWNTO 0);
			dmask : IN  STD_LOGIC_VECTOR (63 DOWNTO 0);
			extin : IN  STD_LOGIC_VECTOR (25 DOWNTO 0);
			read : IN  STD_LOGIC;
			reset : IN  STD_LOGIC;
			write : IN  STD_LOGIC;
			dout : OUT  STD_LOGIC_VECTOR (63 DOWNTO 0);
			extctrl : OUT  STD_LOGIC_VECTOR (25 DOWNTO 0);
			extout : OUT  STD_LOGIC_VECTOR (25 DOWNTO 0)
		);
	END COMPONENT;

	SIGNAL addr : STD_LOGIC_VECTOR (13 DOWNTO 0);
	SIGNAL clk : STD_LOGIC;
	SIGNAL clkdiv : STD_LOGIC;
	SIGNAL din : STD_LOGIC_VECTOR (63 DOWNTO 0);
	SIGNAL dmask : STD_LOGIC_VECTOR (63 DOWNTO 0);
	SIGNAL extin : STD_LOGIC_VECTOR (25 DOWNTO 0);
	SIGNAL read : STD_LOGIC;
	SIGNAL reset : STD_LOGIC;
	SIGNAL write : STD_LOGIC;
	SIGNAL dout : STD_LOGIC_VECTOR (63 DOWNTO 0);
	SIGNAL extctrl : STD_LOGIC_VECTOR (25 DOWNTO 0);
	SIGNAL extout : STD_LOGIC_VECTOR (25 DOWNTO 0);

BEGIN
	UUT : pcore
	PORT MAP (
		addr => addr,
		clk => clk,
		clkdiv => clkdiv,
		din => din,
		dmask => dmask,
		extin => extin,
		read => read,
		reset => reset,
		write => write,
		dout => dout,
		extctrl => extctrl,
		extout => extout
	);

	PROCESS -- clock process for clk,
		VARIABLE TX_TIME : INTEGER :=0;

		PROCEDURE ANNOTATE_dout(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",dout,"));
			write(TX_LOC, dout);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_extctrl(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",extctrl,"));
			write(TX_LOC, extctrl);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_extout(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",extout,"));
			write(TX_LOC, extout);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

	BEGIN
		CLOCK_LOOP : LOOP
		clk <= transport '0';
		WAIT FOR 2 ns;
		TX_TIME := TX_TIME + 2;
		clk <= transport '1';
		WAIT FOR 2 ns;
		TX_TIME := TX_TIME + 2;
		ANNOTATE_dout(TX_TIME);
		ANNOTATE_extctrl(TX_TIME);
		ANNOTATE_extout(TX_TIME);
		WAIT FOR 3 ns;
		TX_TIME := TX_TIME + 3;
		clk <= transport '0';
		WAIT FOR 3 ns;
		TX_TIME := TX_TIME + 3;
		END LOOP CLOCK_LOOP;
	END PROCESS;

	PROCESS   -- Process for clk
		VARIABLE TX_OUT : LINE;

		BEGIN
		-- --------------------
		addr <= transport STD_LOGIC_VECTOR'("00000000000000"); --0
		clkdiv <= transport '0';
		din <= transport STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000"); --0
		dmask <= transport STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000"); --0
		extin <= transport STD_LOGIC_VECTOR'("00000000000000000000000000"); --0
		read <= transport '0';
		reset <= transport '0';
		write <= transport '0';
		-- --------------------
		WAIT FOR 10 ns; -- Time=10 ns
		read <= transport '1';
		-- --------------------
		WAIT FOR 10 ns; -- Time=20 ns
		read <= transport '0';
		-- --------------------
		WAIT FOR 60 ns; -- Time=80 ns
		-- --------------------

		write(TX_OUT, string'("Total[]"));
		writeline(results, TX_OUT);
		ASSERT (FALSE) REPORT
			"Success! Simulation for annotation completed"
			SEVERITY FAILURE;
	END PROCESS;
END testbench_arch;

CONFIGURATION pcore_cfg OF testbench IS
	FOR testbench_arch
	END FOR;
END pcore_cfg;
